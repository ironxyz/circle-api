/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BurnFeePaymentAmount {
    /// Sum of all push payments received, in units of the currency, with a `.`.
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "currency")]
    pub currency: models::FiatCurrency,
}

impl BurnFeePaymentAmount {
    pub fn new(amount: String, currency: models::FiatCurrency) -> BurnFeePaymentAmount {
        BurnFeePaymentAmount {
            amount,
            currency,
        }
    }
}

