/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferRequestVerifiedBlockchainLocation {
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The ID of the verified blockchain recipient address.
    #[serde(rename = "addressId")]
    pub address_id: uuid::Uuid,
}

impl TransferRequestVerifiedBlockchainLocation {
    pub fn new(r#type: Type, address_id: uuid::Uuid) -> TransferRequestVerifiedBlockchainLocation {
        TransferRequestVerifiedBlockchainLocation {
            r#type,
            address_id,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "verified_blockchain")]
    VerifiedBlockchain,
}

impl Default for Type {
    fn default() -> Type {
        Self::VerifiedBlockchain
    }
}

