/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubscriptionResponse {
    /// Unique system generated identifier for the entity.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    /// URL of the endpoint.
    #[serde(rename = "endpoint", skip_serializing_if = "Option::is_none")]
    pub endpoint: Option<String>,
    /// List of subscriptions details for created subscriptions.
    #[serde(rename = "subscriptionDetails", skip_serializing_if = "Option::is_none")]
    pub subscription_details: Option<Vec<models::SubscriptionDetail>>,
}

impl SubscriptionResponse {
    pub fn new() -> SubscriptionResponse {
        SubscriptionResponse {
            id: None,
            endpoint: None,
            subscription_details: None,
        }
    }
}

