/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BusinessTransferCreationRequest {
    /// Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.
    #[serde(rename = "idempotencyKey")]
    pub idempotency_key: uuid::Uuid,
    #[serde(rename = "destination")]
    pub destination: models::TransferRequestVerifiedBlockchainLocation,
    #[serde(rename = "amount")]
    pub amount: models::Money,
}

impl BusinessTransferCreationRequest {
    pub fn new(idempotency_key: uuid::Uuid, destination: models::TransferRequestVerifiedBlockchainLocation, amount: models::Money) -> BusinessTransferCreationRequest {
        BusinessTransferCreationRequest {
            idempotency_key,
            destination,
            amount,
        }
    }
}

