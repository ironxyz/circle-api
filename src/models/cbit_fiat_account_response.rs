/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CbitFiatAccountResponse {
    /// Unique system generated identifier for the entity.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "status")]
    pub status: models::ExternalFiatAccountStatus,
    /// Tracking ref that needs to be set in the public description field when you send the funds to Circle CBIT wallet.
    #[serde(rename = "trackingRef")]
    pub tracking_ref: String,
    /// Your CBIT wallet address.
    #[serde(rename = "walletAddress")]
    pub wallet_address: String,
    /// A <TransferType, TransferTypeInfo> map which shows transfer types supported on this account as well as additional information for each. For CBIT accounts this will always only show information for CBIT transfers.
    #[serde(rename = "transferTypesInfo")]
    pub transfer_types_info: std::collections::HashMap<String, models::TransferTypeInfo>,
    /// ISO-8601 UTC date/time format.
    #[serde(rename = "createDate")]
    pub create_date: String,
    /// ISO-8601 UTC date/time format.
    #[serde(rename = "updateDate")]
    pub update_date: String,
}

impl CbitFiatAccountResponse {
    pub fn new(id: uuid::Uuid, status: models::ExternalFiatAccountStatus, tracking_ref: String, wallet_address: String, transfer_types_info: std::collections::HashMap<String, models::TransferTypeInfo>, create_date: String, update_date: String) -> CbitFiatAccountResponse {
        CbitFiatAccountResponse {
            id,
            status,
            tracking_ref,
            wallet_address,
            transfer_types_info,
            create_date,
            update_date,
        }
    }
}

