/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CbitInstruction {
    /// Circle tracking reference that needs to be set in the CBIT public description field.
    #[serde(rename = "trackingRef", skip_serializing_if = "Option::is_none")]
    pub tracking_ref: Option<String>,
    /// Circle wallet address that needs to be set in the CBIT recipient wallet field.
    #[serde(rename = "walletAddress", skip_serializing_if = "Option::is_none")]
    pub wallet_address: Option<String>,
}

impl CbitInstruction {
    pub fn new() -> CbitInstruction {
        CbitInstruction {
            tracking_ref: None,
            wallet_address: None,
        }
    }
}

