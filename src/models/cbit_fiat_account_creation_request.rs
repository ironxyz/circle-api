/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CbitFiatAccountCreationRequest {
    /// Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.
    #[serde(rename = "idempotencyKey")]
    pub idempotency_key: uuid::Uuid,
    /// CBIT wallet address.
    #[serde(rename = "walletAddress")]
    pub wallet_address: String,
}

impl CbitFiatAccountCreationRequest {
    pub fn new(idempotency_key: uuid::Uuid, wallet_address: String) -> CbitFiatAccountCreationRequest {
        CbitFiatAccountCreationRequest {
            idempotency_key,
            wallet_address,
        }
    }
}

