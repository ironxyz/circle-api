/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkFeeQuote {
    /// UUID of network fee quote
    #[serde(rename = "quoteId")]
    pub quote_id: uuid::Uuid,
    #[serde(rename = "amount")]
    pub amount: Box<models::CryptoPaymentsMoney>,
    /// The timestamp when the quote will expire at, in ISO-8601 UTC date/time format.
    #[serde(rename = "expiresAt")]
    pub expires_at: String,
}

impl NetworkFeeQuote {
    pub fn new(quote_id: uuid::Uuid, amount: models::CryptoPaymentsMoney, expires_at: String) -> NetworkFeeQuote {
        NetworkFeeQuote {
            quote_id,
            amount: Box::new(amount),
            expires_at,
        }
    }
}

