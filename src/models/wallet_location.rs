/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WalletLocation {
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The id of the wallet.
    #[serde(rename = "id")]
    pub id: String,
}

impl WalletLocation {
    pub fn new(r#type: Type, id: String) -> WalletLocation {
        WalletLocation {
            r#type,
            id,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "wallet")]
    Wallet,
}

impl Default for Type {
    fn default() -> Type {
        Self::Wallet
    }
}

