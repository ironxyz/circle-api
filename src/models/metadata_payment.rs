/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetadataPayment {
    /// Email of the user.
    #[serde(rename = "email")]
    pub email: String,
    /// Phone number of the user in E.164 format. We recommend using a library such as [libphonenumber](https://github.com/google/libphonenumber) to parse and validate phone numbers.
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    /// Hash of the session identifier; typically of the end user. This helps us make risk decisions and prevent fraud. IMPORTANT: Please hash the session identifier to prevent sending us actual session identifiers. 
    #[serde(rename = "sessionId")]
    pub session_id: String,
    /// Single IPv4 or IPv6 address of user'
    #[serde(rename = "ipAddress")]
    pub ip_address: String,
}

impl MetadataPayment {
    pub fn new(email: String, session_id: String, ip_address: String) -> MetadataPayment {
        MetadataPayment {
            email,
            phone_number: None,
            session_id,
            ip_address,
        }
    }
}

