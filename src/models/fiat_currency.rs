/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FiatCurrency : Currency code.
/// Currency code.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FiatCurrency {
    #[serde(rename = "USD")]
    Usd,
    #[serde(rename = "EUR")]
    Eur,
    #[serde(rename = "MXN")]
    Mxn,
    #[serde(rename = "SGD")]
    Sgd,
    #[serde(rename = "BRL")]
    Brl,

}

impl std::fmt::Display for FiatCurrency {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Usd => write!(f, "USD"),
            Self::Eur => write!(f, "EUR"),
            Self::Mxn => write!(f, "MXN"),
            Self::Sgd => write!(f, "SGD"),
            Self::Brl => write!(f, "BRL"),
        }
    }
}

impl Default for FiatCurrency {
    fn default() -> FiatCurrency {
        Self::Usd
    }
}

