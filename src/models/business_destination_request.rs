/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BusinessDestinationRequest : The destination bank account.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BusinessDestinationRequest {
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Unique system generated identifier for the entity.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
}

impl BusinessDestinationRequest {
    /// The destination bank account.
    pub fn new(r#type: Type, id: uuid::Uuid) -> BusinessDestinationRequest {
        BusinessDestinationRequest {
            r#type,
            id,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "wire")]
    Wire,
    #[serde(rename = "cbit")]
    Cbit,
    #[serde(rename = "pix")]
    Pix,
    #[serde(rename = "sepa")]
    Sepa,
    #[serde(rename = "sepa_instant")]
    SepaInstant,
}

impl Default for Type {
    fn default() -> Type {
        Self::Wire
    }
}

