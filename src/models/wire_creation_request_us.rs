/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WireCreationRequestUs : Relevant fields for U.S. bank accounts.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WireCreationRequestUs {
    /// Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.
    #[serde(rename = "idempotencyKey")]
    pub idempotency_key: uuid::Uuid,
    /// Account number that identifies the bank account.
    #[serde(rename = "accountNumber")]
    pub account_number: String,
    /// ABA routing number for the bank account. Note this has to be specific for bank wire transfers.
    #[serde(rename = "routingNumber")]
    pub routing_number: String,
    #[serde(rename = "billingDetails")]
    pub billing_details: models::BillingDetails,
    #[serde(rename = "bankAddress")]
    pub bank_address: models::BankAddress,
}

impl WireCreationRequestUs {
    /// Relevant fields for U.S. bank accounts.
    pub fn new(idempotency_key: uuid::Uuid, account_number: String, routing_number: String, billing_details: models::BillingDetails, bank_address: models::BankAddress) -> WireCreationRequestUs {
        WireCreationRequestUs {
            idempotency_key,
            account_number,
            routing_number,
            billing_details,
            bank_address,
        }
    }
}

