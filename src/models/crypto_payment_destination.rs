/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CryptoPaymentDestination {
    /// The destination address
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "chain")]
    pub chain: Chain,
}

impl CryptoPaymentDestination {
    pub fn new(address: String, chain: Chain) -> CryptoPaymentDestination {
        CryptoPaymentDestination {
            address,
            chain,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Chain {
    #[serde(rename = "ETH")]
    Eth,
}

impl Default for Chain {
    fn default() -> Chain {
        Self::Eth
    }
}

