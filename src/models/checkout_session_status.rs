/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CheckoutSessionStatus : Status of the checkout session. Active: the checkout session is still in-progress. Completed: the payments of a checkout session is successful and the checkout session is completed. Expired: indicates that it expired and is no longer accepting any new payments.
/// Status of the checkout session. Active: the checkout session is still in-progress. Completed: the payments of a checkout session is successful and the checkout session is completed. Expired: indicates that it expired and is no longer accepting any new payments.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CheckoutSessionStatus {
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "expired")]
    Expired,

}

impl std::fmt::Display for CheckoutSessionStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Active => write!(f, "active"),
            Self::Completed => write!(f, "completed"),
            Self::Expired => write!(f, "expired"),
        }
    }
}

impl Default for CheckoutSessionStatus {
    fn default() -> CheckoutSessionStatus {
        Self::Active
    }
}

