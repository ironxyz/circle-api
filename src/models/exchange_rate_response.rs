/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExchangeRateResponse {
    /// Unique system generated identifier for the entity.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Exchange rate
    #[serde(rename = "rate")]
    pub rate: f32,
    #[serde(rename = "from")]
    pub from: models::FiatOptionalAmountMoney,
    #[serde(rename = "to")]
    pub to: models::FiatOptionalAmountMoney,
    /// ISO-8601 UTC date/time format.
    #[serde(rename = "timestamp")]
    pub timestamp: String,
}

impl ExchangeRateResponse {
    pub fn new(id: uuid::Uuid, rate: f32, from: models::FiatOptionalAmountMoney, to: models::FiatOptionalAmountMoney, timestamp: String) -> ExchangeRateResponse {
        ExchangeRateResponse {
            id,
            rate,
            from,
            to,
            timestamp,
        }
    }
}

