/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PresignResponseTypedData : The typed data
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PresignResponseTypedData {
    #[serde(rename = "domain")]
    pub domain: models::PresignDomain,
    #[serde(rename = "message")]
    pub message: models::PresignMessage,
    #[serde(rename = "totalAmount")]
    pub total_amount: models::FiatMoneyUsd,
    /// Who pays for network fee. Can only be endUser or merchant. If it's the endUser, totalAmount includes the network fee and networkFeeQuote isn't null; If it's the merchant, totalAmount doesn't include network fee and networkFeeQuote is null.
    #[serde(rename = "feeChargeModel")]
    pub fee_charge_model: FeeChargeModel,
    #[serde(rename = "networkFeeQuote", skip_serializing_if = "Option::is_none")]
    pub network_fee_quote: Option<models::NetworkFeeQuote>,
    #[serde(rename = "types")]
    pub types: models::PresignMessageTypes,
    /// Type of the message
    #[serde(rename = "primaryType")]
    pub primary_type: PrimaryType,
}

impl PresignResponseTypedData {
    /// The typed data
    pub fn new(domain: models::PresignDomain, message: models::PresignMessage, total_amount: models::FiatMoneyUsd, fee_charge_model: FeeChargeModel, types: models::PresignMessageTypes, primary_type: PrimaryType) -> PresignResponseTypedData {
        PresignResponseTypedData {
            domain,
            message,
            total_amount,
            fee_charge_model,
            network_fee_quote: None,
            types,
            primary_type,
        }
    }
}
/// Who pays for network fee. Can only be endUser or merchant. If it's the endUser, totalAmount includes the network fee and networkFeeQuote isn't null; If it's the merchant, totalAmount doesn't include network fee and networkFeeQuote is null.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FeeChargeModel {
    #[serde(rename = "endUser")]
    EndUser,
    #[serde(rename = "merchant")]
    Merchant,
}

impl Default for FeeChargeModel {
    fn default() -> FeeChargeModel {
        Self::EndUser
    }
}
/// Type of the message
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PrimaryType {
    #[serde(rename = "TransferWithAuthorization")]
    TransferWithAuthorization,
    #[serde(rename = "EIP712Domain")]
    Eip712Domain,
}

impl Default for PrimaryType {
    fn default() -> PrimaryType {
        Self::TransferWithAuthorization
    }
}

