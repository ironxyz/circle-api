/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PresignMessage {
    /// A blockchain address representing payer's address
    #[serde(rename = "from")]
    pub from: String,
    /// A blockchain address representing payee's address
    #[serde(rename = "to")]
    pub to: String,
    /// Amount to be transferred
    #[serde(rename = "value")]
    pub value: String,
    /// the timestamp after which this is valid (unix time)
    #[serde(rename = "validAfter")]
    pub valid_after: i64,
    /// the timestamp before which this is valid (unix time)
    #[serde(rename = "validBefore")]
    pub valid_before: i64,
    /// unique nonce
    #[serde(rename = "nonce")]
    pub nonce: String,
}

impl PresignMessage {
    pub fn new(from: String, to: String, value: String, valid_after: i64, valid_before: i64, nonce: String) -> PresignMessage {
        PresignMessage {
            from,
            to,
            value,
            valid_after,
            valid_before,
            nonce,
        }
    }
}

