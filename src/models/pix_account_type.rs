/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PixAccountType : Beneficiary account type.
/// Beneficiary account type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PixAccountType {
    #[serde(rename = "checking")]
    Checking,
    #[serde(rename = "savings")]
    Savings,
    #[serde(rename = "salary")]
    Salary,
    #[serde(rename = "prepaid")]
    Prepaid,

}

impl std::fmt::Display for PixAccountType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Checking => write!(f, "checking"),
            Self::Savings => write!(f, "savings"),
            Self::Salary => write!(f, "salary"),
            Self::Prepaid => write!(f, "prepaid"),
        }
    }
}

impl Default for PixAccountType {
    fn default() -> PixAccountType {
        Self::Checking
    }
}

