/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BasicChargebackHistory {
    /// Enumerated type of the chargeback history event. `1st Chargeback` represents the first stage of the dispute procedure initiated by the cardholder’s issuing bank.   `2nd Chargeback` represents the second stage of the dispute procedure initiated by the cardholder’s issuing bank (This stage is MasterCard only).   `Chargeback Reversal` represents when 1st Chargeback or 2nd Chargeback is withdrawn by the issuer.   `Representment` represents the stage when merchants decided to dispute 1st Chargeback or 2nd Chargeback.   `Chargeback Settlement` can imply one of the two: 1) If merchant or marketplace is taking the lost of the chargeback, money will be debit from the wallet during this stage.   2) If merchant of marketplace successfully dispute the chargeback, money will be credit back to the wallet during this stage. 
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "chargebackAmount")]
    pub chargeback_amount: models::FiatMoneyUsd,
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<models::FiatMoneyUsd>,
    /// The reason the chargeback was created.
    #[serde(rename = "description")]
    pub description: String,
    /// Unique system generated identifier for the settlement related to the chargeback history.
    #[serde(rename = "settlementId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub settlement_id: Option<Option<uuid::Uuid>>,
    /// ISO-8601 UTC date/time format.
    #[serde(rename = "createDate", skip_serializing_if = "Option::is_none")]
    pub create_date: Option<String>,
}

impl BasicChargebackHistory {
    pub fn new(r#type: Type, chargeback_amount: models::FiatMoneyUsd, description: String) -> BasicChargebackHistory {
        BasicChargebackHistory {
            r#type,
            chargeback_amount,
            fee: None,
            description,
            settlement_id: None,
            create_date: None,
        }
    }
}
/// Enumerated type of the chargeback history event. `1st Chargeback` represents the first stage of the dispute procedure initiated by the cardholder’s issuing bank.   `2nd Chargeback` represents the second stage of the dispute procedure initiated by the cardholder’s issuing bank (This stage is MasterCard only).   `Chargeback Reversal` represents when 1st Chargeback or 2nd Chargeback is withdrawn by the issuer.   `Representment` represents the stage when merchants decided to dispute 1st Chargeback or 2nd Chargeback.   `Chargeback Settlement` can imply one of the two: 1) If merchant or marketplace is taking the lost of the chargeback, money will be debit from the wallet during this stage.   2) If merchant of marketplace successfully dispute the chargeback, money will be credit back to the wallet during this stage. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "1st Chargeback")]
    Variant1stChargeback,
    #[serde(rename = "2nd Chargeback")]
    Variant2ndChargeback,
    #[serde(rename = "Chargeback Reversal")]
    ChargebackReversal,
    #[serde(rename = "Representment")]
    Representment,
    #[serde(rename = "Chargeback Settlement")]
    ChargebackSettlement,
}

impl Default for Type {
    fn default() -> Type {
        Self::Variant1stChargeback
    }
}

