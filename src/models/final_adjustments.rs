/*
 * All Circle APIs
 *
 * Circle's General, Core Functionality, Payments, Payouts, Accounts, and Crypto Payments APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 2.11.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FinalAdjustments : Final adjustment which increases (credits) or decreases (debits) the total returned amount to the source wallet.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FinalAdjustments {
    #[serde(rename = "fxCredit", skip_serializing_if = "Option::is_none")]
    pub fx_credit: Option<Box<models::FiatMoneyUsd>>,
    #[serde(rename = "fxDebit", skip_serializing_if = "Option::is_none")]
    pub fx_debit: Option<Box<models::FiatMoneyUsd>>,
}

impl FinalAdjustments {
    /// Final adjustment which increases (credits) or decreases (debits) the total returned amount to the source wallet.
    pub fn new() -> FinalAdjustments {
        FinalAdjustments {
            fx_credit: None,
            fx_debit: None,
        }
    }
}

